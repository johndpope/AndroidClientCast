buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.EricssonBroadcastServices'

ext {
    releaseArtifact = 'empplayer-cast'
    releaseVersion = 'r2.72.0'
    releaseDescription = 'The EMP Player library cast module.'
    libraryTag = 'master-SNAPSHOT'
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    if (project.hasProperty('hasParentProject')) {
        compile project(':libraries:exposure')
    }
    else {
        compile "com.github.EricssonBroadcastServices:AndroidClientExposure:${project.ext.libraryTag}"
    }
    compile "com.android.support:mediarouter-v7:26.0.1"
    compile "com.google.android.gms:play-services-cast-framework:10.0.1"

    // Test Dependencies
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "org.robolectric:robolectric:3.5.1"
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: 'https://raw.githubusercontent.com/EricssonBroadcastServices/AndroidClientUtilities/master/jacoco.gradle'
